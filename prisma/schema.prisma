generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  username     String   @unique
  email        String   @unique
  password     String
  rating       Int      @default(1200)
  gamesPlayed  Int      @default(0)
  gamesWon     Int      @default(0)
  gamesLost    Int      @default(0)
  gamesDraw    Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  gamesAsBlack Game[]   @relation("BlackPlayer")
  gamesAsWhite Game[]   @relation("WhitePlayer")

  @@map("users")
}

model Game {
  id          String      @id @default(cuid())
  whiteId     String
  blackId     String
  fen         String      @default("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1")
  moves       String      @default("")
  status      GameStatus  @default(ACTIVE)
  result      GameResult?
  timeControl Int         @default(600000)
  timeLeft    String      @default("{\"white\":600000,\"black\":600000}")
  startedAt   DateTime    @default(now())
  endedAt     DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  blackPlayer User        @relation("BlackPlayer", fields: [blackId], references: [id])
  whitePlayer User        @relation("WhitePlayer", fields: [whiteId], references: [id])

  @@map("games")
}

enum GameStatus {
  WAITING
  ACTIVE
  FINISHED
}

enum GameResult {
  WHITE_WINS
  BLACK_WINS
  DRAW
}
